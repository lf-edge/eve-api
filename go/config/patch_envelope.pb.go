// Copyright(c) 2023 Zededa, Inc.
// All rights reserved

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: config/patch_envelope.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EveOpaqueObjectCategory int32

const (
	EveOpaqueObjectCategory_EVE_OPAQUE_OBJECT_CATEGORY_UNKOWN     EveOpaqueObjectCategory = 0
	EveOpaqueObjectCategory_EVE_OPAQUE_OBJECT_CATEGORY_BASE64     EveOpaqueObjectCategory = 1
	EveOpaqueObjectCategory_EVE_OPAQUE_OBJECT_CATEGORY_BINARYBLOB EveOpaqueObjectCategory = 2
	EveOpaqueObjectCategory_EVE_OPAQUE_OBJECT_CATEGORY_SECRET     EveOpaqueObjectCategory = 3
)

// Enum value maps for EveOpaqueObjectCategory.
var (
	EveOpaqueObjectCategory_name = map[int32]string{
		0: "EVE_OPAQUE_OBJECT_CATEGORY_UNKOWN",
		1: "EVE_OPAQUE_OBJECT_CATEGORY_BASE64",
		2: "EVE_OPAQUE_OBJECT_CATEGORY_BINARYBLOB",
		3: "EVE_OPAQUE_OBJECT_CATEGORY_SECRET",
	}
	EveOpaqueObjectCategory_value = map[string]int32{
		"EVE_OPAQUE_OBJECT_CATEGORY_UNKOWN":     0,
		"EVE_OPAQUE_OBJECT_CATEGORY_BASE64":     1,
		"EVE_OPAQUE_OBJECT_CATEGORY_BINARYBLOB": 2,
		"EVE_OPAQUE_OBJECT_CATEGORY_SECRET":     3,
	}
)

func (x EveOpaqueObjectCategory) Enum() *EveOpaqueObjectCategory {
	p := new(EveOpaqueObjectCategory)
	*p = x
	return p
}

func (x EveOpaqueObjectCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EveOpaqueObjectCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_config_patch_envelope_proto_enumTypes[0].Descriptor()
}

func (EveOpaqueObjectCategory) Type() protoreflect.EnumType {
	return &file_config_patch_envelope_proto_enumTypes[0]
}

func (x EveOpaqueObjectCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EveOpaqueObjectCategory.Descriptor instead.
func (EveOpaqueObjectCategory) EnumDescriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{0}
}

type EvePatchEnvelopeAction int32

const (
	EvePatchEnvelopeAction_EVE_PATCH_ENVELOPE_ACTION_STORE    EvePatchEnvelopeAction = 0
	EvePatchEnvelopeAction_EVE_PATCH_ENVELOPE_ACTION_ACTIVATE EvePatchEnvelopeAction = 1
)

// Enum value maps for EvePatchEnvelopeAction.
var (
	EvePatchEnvelopeAction_name = map[int32]string{
		0: "EVE_PATCH_ENVELOPE_ACTION_STORE",
		1: "EVE_PATCH_ENVELOPE_ACTION_ACTIVATE",
	}
	EvePatchEnvelopeAction_value = map[string]int32{
		"EVE_PATCH_ENVELOPE_ACTION_STORE":    0,
		"EVE_PATCH_ENVELOPE_ACTION_ACTIVATE": 1,
	}
)

func (x EvePatchEnvelopeAction) Enum() *EvePatchEnvelopeAction {
	p := new(EvePatchEnvelopeAction)
	*p = x
	return p
}

func (x EvePatchEnvelopeAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvePatchEnvelopeAction) Descriptor() protoreflect.EnumDescriptor {
	return file_config_patch_envelope_proto_enumTypes[1].Descriptor()
}

func (EvePatchEnvelopeAction) Type() protoreflect.EnumType {
	return &file_config_patch_envelope_proto_enumTypes[1]
}

func (x EvePatchEnvelopeAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvePatchEnvelopeAction.Descriptor instead.
func (EvePatchEnvelopeAction) EnumDescriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{1}
}

type EveOpaqueBase64Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encrypted bool `protobuf:"varint,1,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	// Types that are assignable to TextData:
	//
	//	*EveOpaqueBase64Data_Base64ClearTextData
	//	*EveOpaqueBase64Data_Base64CipherTextData
	TextData isEveOpaqueBase64Data_TextData `protobuf_oneof:"textData"`
	// Types that are assignable to Base64MetaData:
	//
	//	*EveOpaqueBase64Data_Base64ClearTextMetaData
	//	*EveOpaqueBase64Data_Base64CipherTextMetaData
	Base64MetaData isEveOpaqueBase64Data_Base64MetaData `protobuf_oneof:"base64MetaData"`
}

func (x *EveOpaqueBase64Data) Reset() {
	*x = EveOpaqueBase64Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_patch_envelope_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EveOpaqueBase64Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EveOpaqueBase64Data) ProtoMessage() {}

func (x *EveOpaqueBase64Data) ProtoReflect() protoreflect.Message {
	mi := &file_config_patch_envelope_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EveOpaqueBase64Data.ProtoReflect.Descriptor instead.
func (*EveOpaqueBase64Data) Descriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{0}
}

func (x *EveOpaqueBase64Data) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

func (m *EveOpaqueBase64Data) GetTextData() isEveOpaqueBase64Data_TextData {
	if m != nil {
		return m.TextData
	}
	return nil
}

func (x *EveOpaqueBase64Data) GetBase64ClearTextData() string {
	if x, ok := x.GetTextData().(*EveOpaqueBase64Data_Base64ClearTextData); ok {
		return x.Base64ClearTextData
	}
	return ""
}

func (x *EveOpaqueBase64Data) GetBase64CipherTextData() *CipherBlock {
	if x, ok := x.GetTextData().(*EveOpaqueBase64Data_Base64CipherTextData); ok {
		return x.Base64CipherTextData
	}
	return nil
}

func (m *EveOpaqueBase64Data) GetBase64MetaData() isEveOpaqueBase64Data_Base64MetaData {
	if m != nil {
		return m.Base64MetaData
	}
	return nil
}

func (x *EveOpaqueBase64Data) GetBase64ClearTextMetaData() string {
	if x, ok := x.GetBase64MetaData().(*EveOpaqueBase64Data_Base64ClearTextMetaData); ok {
		return x.Base64ClearTextMetaData
	}
	return ""
}

func (x *EveOpaqueBase64Data) GetBase64CipherTextMetaData() *CipherBlock {
	if x, ok := x.GetBase64MetaData().(*EveOpaqueBase64Data_Base64CipherTextMetaData); ok {
		return x.Base64CipherTextMetaData
	}
	return nil
}

type isEveOpaqueBase64Data_TextData interface {
	isEveOpaqueBase64Data_TextData()
}

type EveOpaqueBase64Data_Base64ClearTextData struct {
	Base64ClearTextData string `protobuf:"bytes,2,opt,name=base64ClearTextData,proto3,oneof"`
}

type EveOpaqueBase64Data_Base64CipherTextData struct {
	// base 64 encoded and then encrypted
	Base64CipherTextData *CipherBlock `protobuf:"bytes,3,opt,name=base64CipherTextData,proto3,oneof"`
}

func (*EveOpaqueBase64Data_Base64ClearTextData) isEveOpaqueBase64Data_TextData() {}

func (*EveOpaqueBase64Data_Base64CipherTextData) isEveOpaqueBase64Data_TextData() {}

type isEveOpaqueBase64Data_Base64MetaData interface {
	isEveOpaqueBase64Data_Base64MetaData()
}

type EveOpaqueBase64Data_Base64ClearTextMetaData struct {
	Base64ClearTextMetaData string `protobuf:"bytes,4,opt,name=base64ClearTextMetaData,proto3,oneof"`
}

type EveOpaqueBase64Data_Base64CipherTextMetaData struct {
	Base64CipherTextMetaData *CipherBlock `protobuf:"bytes,5,opt,name=base64CipherTextMetaData,proto3,oneof"`
}

func (*EveOpaqueBase64Data_Base64ClearTextMetaData) isEveOpaqueBase64Data_Base64MetaData() {}

func (*EveOpaqueBase64Data_Base64CipherTextMetaData) isEveOpaqueBase64Data_Base64MetaData() {}

type EveOpaqueBinaryBlob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Target field of Volume set to AppCustom
	OpaqueVolume *Volume `protobuf:"bytes,1,opt,name=opaqueVolume,proto3" json:"opaqueVolume,omitempty"`
}

func (x *EveOpaqueBinaryBlob) Reset() {
	*x = EveOpaqueBinaryBlob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_patch_envelope_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EveOpaqueBinaryBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EveOpaqueBinaryBlob) ProtoMessage() {}

func (x *EveOpaqueBinaryBlob) ProtoReflect() protoreflect.Message {
	mi := &file_config_patch_envelope_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EveOpaqueBinaryBlob.ProtoReflect.Descriptor instead.
func (*EveOpaqueBinaryBlob) Descriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{1}
}

func (x *EveOpaqueBinaryBlob) GetOpaqueVolume() *Volume {
	if x != nil {
		return x.OpaqueVolume
	}
	return nil
}

type EveBinaryArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// base64 or binary blob only - secret type is invalid
	Format EveOpaqueObjectCategory `protobuf:"varint,1,opt,name=format,proto3,enum=org.lfedge.eve.config.EveOpaqueObjectCategory" json:"format,omitempty"`
	// Types that are assignable to Script:
	//
	//	*EveBinaryArtifact_Base64Artifact
	//	*EveBinaryArtifact_BinaryArtifact
	Script           isEveBinaryArtifact_Script `protobuf_oneof:"script"`
	ArtifactMetaData *string                    `protobuf:"bytes,4,opt,name=artifactMetaData,proto3,oneof" json:"artifactMetaData,omitempty"`
}

func (x *EveBinaryArtifact) Reset() {
	*x = EveBinaryArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_patch_envelope_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EveBinaryArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EveBinaryArtifact) ProtoMessage() {}

func (x *EveBinaryArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_config_patch_envelope_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EveBinaryArtifact.ProtoReflect.Descriptor instead.
func (*EveBinaryArtifact) Descriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{2}
}

func (x *EveBinaryArtifact) GetFormat() EveOpaqueObjectCategory {
	if x != nil {
		return x.Format
	}
	return EveOpaqueObjectCategory_EVE_OPAQUE_OBJECT_CATEGORY_UNKOWN
}

func (m *EveBinaryArtifact) GetScript() isEveBinaryArtifact_Script {
	if m != nil {
		return m.Script
	}
	return nil
}

func (x *EveBinaryArtifact) GetBase64Artifact() *EveOpaqueBase64Data {
	if x, ok := x.GetScript().(*EveBinaryArtifact_Base64Artifact); ok {
		return x.Base64Artifact
	}
	return nil
}

func (x *EveBinaryArtifact) GetBinaryArtifact() *EveOpaqueBinaryBlob {
	if x, ok := x.GetScript().(*EveBinaryArtifact_BinaryArtifact); ok {
		return x.BinaryArtifact
	}
	return nil
}

func (x *EveBinaryArtifact) GetArtifactMetaData() string {
	if x != nil && x.ArtifactMetaData != nil {
		return *x.ArtifactMetaData
	}
	return ""
}

type isEveBinaryArtifact_Script interface {
	isEveBinaryArtifact_Script()
}

type EveBinaryArtifact_Base64Artifact struct {
	Base64Artifact *EveOpaqueBase64Data `protobuf:"bytes,2,opt,name=base64Artifact,proto3,oneof"`
}

type EveBinaryArtifact_BinaryArtifact struct {
	BinaryArtifact *EveOpaqueBinaryBlob `protobuf:"bytes,3,opt,name=binaryArtifact,proto3,oneof"`
}

func (*EveBinaryArtifact_Base64Artifact) isEveBinaryArtifact_Script() {}

func (*EveBinaryArtifact_BinaryArtifact) isEveBinaryArtifact_Script() {}

type EvePatchEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique name provided by user
	DisplayName string `protobuf:"bytes,1,opt,name=displayName,proto3" json:"displayName,omitempty"`
	// Unique
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// artibtraty versoin from user
	Version *string `protobuf:"bytes,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	// way this object should be treated
	Action    EvePatchEnvelopeAction `protobuf:"varint,4,opt,name=action,proto3,enum=org.lfedge.eve.config.EvePatchEnvelopeAction" json:"action,omitempty"`
	Artifacts []*EveBinaryArtifact   `protobuf:"bytes,5,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	// List of application instance ids that should
	// be allowed to access this patch envelope
	AppInstIdsAllowed []string `protobuf:"bytes,6,rep,name=appInstIdsAllowed,proto3" json:"appInstIdsAllowed,omitempty"`
	// Time object created in UTC format
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *EvePatchEnvelope) Reset() {
	*x = EvePatchEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_patch_envelope_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvePatchEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvePatchEnvelope) ProtoMessage() {}

func (x *EvePatchEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_config_patch_envelope_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvePatchEnvelope.ProtoReflect.Descriptor instead.
func (*EvePatchEnvelope) Descriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{3}
}

func (x *EvePatchEnvelope) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *EvePatchEnvelope) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *EvePatchEnvelope) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *EvePatchEnvelope) GetAction() EvePatchEnvelopeAction {
	if x != nil {
		return x.Action
	}
	return EvePatchEnvelopeAction_EVE_PATCH_ENVELOPE_ACTION_STORE
}

func (x *EvePatchEnvelope) GetArtifacts() []*EveBinaryArtifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *EvePatchEnvelope) GetAppInstIdsAllowed() []string {
	if x != nil {
		return x.AppInstIdsAllowed
	}
	return nil
}

func (x *EvePatchEnvelope) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

var File_config_patch_envelope_proto protoreflect.FileDescriptor

var file_config_patch_envelope_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x65,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6f,
	0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x61, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x02, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x4f, 0x70, 0x61,
	0x71, 0x75, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x13, 0x62,
	0x61, 0x73, 0x65, 0x36, 0x34, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x62, 0x61, 0x73, 0x65,
	0x36, 0x34, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x58, 0x0a, 0x14, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x00, 0x52, 0x14, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x43, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x17, 0x62, 0x61, 0x73,
	0x65, 0x36, 0x34, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x17, 0x62, 0x61,
	0x73, 0x65, 0x36, 0x34, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x60, 0x0a, 0x18, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x43,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66,
	0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x01, 0x52, 0x18, 0x62,
	0x61, 0x73, 0x65, 0x36, 0x34, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x74, 0x65, 0x78, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x10, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x4f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x41, 0x0a, 0x0c,
	0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e,
	0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x0c, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22,
	0xd7, 0x02, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x46, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x76,
	0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x54, 0x0a,
	0x0e, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x76,
	0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x12, 0x54, 0x0a, 0x0e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x45, 0x76, 0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x0e, 0x62, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x10, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0xec, 0x02, 0x0a, 0x10, 0x45, 0x76,
	0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x76, 0x65, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x09, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x76, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0xb9, 0x01, 0x0a, 0x17, 0x45, 0x76, 0x65,
	0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x56, 0x45, 0x5f, 0x4f, 0x50, 0x41, 0x51,
	0x55, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f,
	0x52, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x45,
	0x56, 0x45, 0x5f, 0x4f, 0x50, 0x41, 0x51, 0x55, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x36, 0x34,
	0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x45, 0x56, 0x45, 0x5f, 0x4f, 0x50, 0x41, 0x51, 0x55, 0x45,
	0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59,
	0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x02, 0x12, 0x25, 0x0a,
	0x21, 0x45, 0x56, 0x45, 0x5f, 0x4f, 0x50, 0x41, 0x51, 0x55, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45,
	0x43, 0x54, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x45, 0x43, 0x52,
	0x45, 0x54, 0x10, 0x03, 0x2a, 0x65, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x1f, 0x45, 0x56, 0x45, 0x5f, 0x50, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x45, 0x4e, 0x56, 0x45,
	0x4c, 0x4f, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x4f, 0x52,
	0x45, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x56, 0x45, 0x5f, 0x50, 0x41, 0x54, 0x43, 0x48,
	0x5f, 0x45, 0x4e, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x01, 0x42, 0x3d, 0x0a, 0x15, 0x6f,
	0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x66, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_config_patch_envelope_proto_rawDescOnce sync.Once
	file_config_patch_envelope_proto_rawDescData = file_config_patch_envelope_proto_rawDesc
)

func file_config_patch_envelope_proto_rawDescGZIP() []byte {
	file_config_patch_envelope_proto_rawDescOnce.Do(func() {
		file_config_patch_envelope_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_patch_envelope_proto_rawDescData)
	})
	return file_config_patch_envelope_proto_rawDescData
}

var file_config_patch_envelope_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_config_patch_envelope_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_config_patch_envelope_proto_goTypes = []interface{}{
	(EveOpaqueObjectCategory)(0),  // 0: org.lfedge.eve.config.EveOpaqueObjectCategory
	(EvePatchEnvelopeAction)(0),   // 1: org.lfedge.eve.config.EvePatchEnvelopeAction
	(*EveOpaqueBase64Data)(nil),   // 2: org.lfedge.eve.config.EveOpaqueBase64Data
	(*EveOpaqueBinaryBlob)(nil),   // 3: org.lfedge.eve.config.EveOpaqueBinaryBlob
	(*EveBinaryArtifact)(nil),     // 4: org.lfedge.eve.config.EveBinaryArtifact
	(*EvePatchEnvelope)(nil),      // 5: org.lfedge.eve.config.EvePatchEnvelope
	(*CipherBlock)(nil),           // 6: org.lfedge.eve.config.CipherBlock
	(*Volume)(nil),                // 7: org.lfedge.eve.config.Volume
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_config_patch_envelope_proto_depIdxs = []int32{
	6, // 0: org.lfedge.eve.config.EveOpaqueBase64Data.base64CipherTextData:type_name -> org.lfedge.eve.config.CipherBlock
	6, // 1: org.lfedge.eve.config.EveOpaqueBase64Data.base64CipherTextMetaData:type_name -> org.lfedge.eve.config.CipherBlock
	7, // 2: org.lfedge.eve.config.EveOpaqueBinaryBlob.opaqueVolume:type_name -> org.lfedge.eve.config.Volume
	0, // 3: org.lfedge.eve.config.EveBinaryArtifact.format:type_name -> org.lfedge.eve.config.EveOpaqueObjectCategory
	2, // 4: org.lfedge.eve.config.EveBinaryArtifact.base64Artifact:type_name -> org.lfedge.eve.config.EveOpaqueBase64Data
	3, // 5: org.lfedge.eve.config.EveBinaryArtifact.binaryArtifact:type_name -> org.lfedge.eve.config.EveOpaqueBinaryBlob
	1, // 6: org.lfedge.eve.config.EvePatchEnvelope.action:type_name -> org.lfedge.eve.config.EvePatchEnvelopeAction
	4, // 7: org.lfedge.eve.config.EvePatchEnvelope.artifacts:type_name -> org.lfedge.eve.config.EveBinaryArtifact
	8, // 8: org.lfedge.eve.config.EvePatchEnvelope.createTime:type_name -> google.protobuf.Timestamp
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_config_patch_envelope_proto_init() }
func file_config_patch_envelope_proto_init() {
	if File_config_patch_envelope_proto != nil {
		return
	}
	file_config_acipherinfo_proto_init()
	file_config_storage_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_config_patch_envelope_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EveOpaqueBase64Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_patch_envelope_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EveOpaqueBinaryBlob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_patch_envelope_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EveBinaryArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_patch_envelope_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvePatchEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_config_patch_envelope_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*EveOpaqueBase64Data_Base64ClearTextData)(nil),
		(*EveOpaqueBase64Data_Base64CipherTextData)(nil),
		(*EveOpaqueBase64Data_Base64ClearTextMetaData)(nil),
		(*EveOpaqueBase64Data_Base64CipherTextMetaData)(nil),
	}
	file_config_patch_envelope_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EveBinaryArtifact_Base64Artifact)(nil),
		(*EveBinaryArtifact_BinaryArtifact)(nil),
	}
	file_config_patch_envelope_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_patch_envelope_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_patch_envelope_proto_goTypes,
		DependencyIndexes: file_config_patch_envelope_proto_depIdxs,
		EnumInfos:         file_config_patch_envelope_proto_enumTypes,
		MessageInfos:      file_config_patch_envelope_proto_msgTypes,
	}.Build()
	File_config_patch_envelope_proto = out.File
	file_config_patch_envelope_proto_rawDesc = nil
	file_config_patch_envelope_proto_goTypes = nil
	file_config_patch_envelope_proto_depIdxs = nil
}
