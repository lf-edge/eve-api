// Copyright(c) 2020 Zededa, Inc.
// All rights reserved.

syntax = "proto3";

import "certs/certs.proto";

option go_package  = "github.com/lf-edge/eve/api/go/attest";
option java_package = "org.lfedge.eve.attest";

// This is the request payload for POST /api/v2/edgeDevice/id/<uuid>/attest
// The message is assumed to be protected by signing envelope
message ZAttestReq {
  ZAttestReqType reqType = 1;  //type of the request
  ZAttestQuote quote = 2;      //attestation quote msg
  repeated ZCert certs = 3; //X509 certs in .PEM format, signed by device certificate
}

// This is the response payload for POST /api/v2/edgeDevice/id/<uuid>/attest
// The message is assumed to be protected by signing envelope
message ZAttestResponse {
  ZAttestRespType respType = 1;    //type of the response
  ZAttestNonceResp nonce = 2;      //nonce from Controller
  ZAttestQuoteResp quoteResp = 3;  //attest quote response from Controller
}

enum ZAttestReqType {
  ATTEST_REQ_NONE = 0;
  ATTEST_REQ_CERT = 1;   //EVE X.509 certificates
  ATTEST_REQ_NONCE = 2;  //nonce request to Controller
  ATTEST_REQ_QUOTE = 3;  //quote msg
}

enum ZAttestRespType {
  ATTEST_RESP_NONE = 0;
  ATTEST_RESP_CERT = 1;       //response to cert msg
  ATTEST_RESP_NONCE = 2;      //response to quote request
  ATTEST_RESP_QUOTE_RESP = 3; //response to quote msg
}

message ZAttestNonceResp {
  bytes nonce = 1;      //nonce to use in quote generation
}

message ZAttestQuote {
  bytes attestData = 1;  //TPMS_ATTEST (Table 2:123) in https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf
                          //nonce is included in attestData
  bytes signature = 2;   //signature to verify attestData
}

enum ZAttestResponseCode {
  ATTEST_RESPONSE_NONE = 0;
  ATTEST_RESPONSE_SUCCESS = 1;  //Attestation successful
  ATTEST_RESPONSE_FAILURE = 2;  //Attestation failed
}

message ZAttestQuoteResp {
  ZAttestResponseCode response = 1; //result of quote validation
}
