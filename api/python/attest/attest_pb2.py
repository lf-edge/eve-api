# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: attest/attest.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from certs import certs_pb2 as certs_dot_certs__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='attest/attest.proto',
  package='',
  syntax='proto3',
  serialized_options=_b('\n\025org.lfedge.eve.attestZ$github.com/lf-edge/eve/api/go/attest'),
  serialized_pb=_b('\n\x13\x61ttest/attest.proto\x1a\x11\x63\x65rts/certs.proto\"c\n\nZAttestReq\x12 \n\x07reqType\x18\x01 \x01(\x0e\x32\x0f.ZAttestReqType\x12\x1c\n\x05quote\x18\x02 \x01(\x0b\x32\r.ZAttestQuote\x12\x15\n\x05\x63\x65rts\x18\x03 \x03(\x0b\x32\x06.ZCert\"}\n\x0fZAttestResponse\x12\"\n\x08respType\x18\x01 \x01(\x0e\x32\x10.ZAttestRespType\x12 \n\x05nonce\x18\x02 \x01(\x0b\x32\x11.ZAttestNonceResp\x12$\n\tquoteResp\x18\x03 \x01(\x0b\x32\x11.ZAttestQuoteResp\"!\n\x10ZAttestNonceResp\x12\r\n\x05nonce\x18\x01 \x01(\x0c\"5\n\x0cZAttestQuote\x12\x12\n\nattestData\x18\x01 \x01(\x0c\x12\x11\n\tsignature\x18\x02 \x01(\x0c\":\n\x10ZAttestQuoteResp\x12&\n\x08response\x18\x01 \x01(\x0e\x32\x14.ZAttestResponseCode*f\n\x0eZAttestReqType\x12\x13\n\x0f\x41TTEST_REQ_NONE\x10\x00\x12\x13\n\x0f\x41TTEST_REQ_CERT\x10\x01\x12\x14\n\x10\x41TTEST_REQ_NONCE\x10\x02\x12\x14\n\x10\x41TTEST_REQ_QUOTE\x10\x03*p\n\x0fZAttestRespType\x12\x14\n\x10\x41TTEST_RESP_NONE\x10\x00\x12\x14\n\x10\x41TTEST_RESP_CERT\x10\x01\x12\x15\n\x11\x41TTEST_RESP_NONCE\x10\x02\x12\x1a\n\x16\x41TTEST_RESP_QUOTE_RESP\x10\x03*i\n\x13ZAttestResponseCode\x12\x18\n\x14\x41TTEST_RESPONSE_NONE\x10\x00\x12\x1b\n\x17\x41TTEST_RESPONSE_SUCCESS\x10\x01\x12\x1b\n\x17\x41TTEST_RESPONSE_FAILURE\x10\x02\x42=\n\x15org.lfedge.eve.attestZ$github.com/lf-edge/eve/api/go/attestb\x06proto3')
  ,
  dependencies=[certs_dot_certs__pb2.DESCRIPTOR,])

_ZATTESTREQTYPE = _descriptor.EnumDescriptor(
  name='ZAttestReqType',
  full_name='ZAttestReqType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ATTEST_REQ_NONE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATTEST_REQ_CERT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATTEST_REQ_NONCE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATTEST_REQ_QUOTE', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=420,
  serialized_end=522,
)
_sym_db.RegisterEnumDescriptor(_ZATTESTREQTYPE)

ZAttestReqType = enum_type_wrapper.EnumTypeWrapper(_ZATTESTREQTYPE)
_ZATTESTRESPTYPE = _descriptor.EnumDescriptor(
  name='ZAttestRespType',
  full_name='ZAttestRespType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ATTEST_RESP_NONE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATTEST_RESP_CERT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATTEST_RESP_NONCE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATTEST_RESP_QUOTE_RESP', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=524,
  serialized_end=636,
)
_sym_db.RegisterEnumDescriptor(_ZATTESTRESPTYPE)

ZAttestRespType = enum_type_wrapper.EnumTypeWrapper(_ZATTESTRESPTYPE)
_ZATTESTRESPONSECODE = _descriptor.EnumDescriptor(
  name='ZAttestResponseCode',
  full_name='ZAttestResponseCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ATTEST_RESPONSE_NONE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATTEST_RESPONSE_SUCCESS', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATTEST_RESPONSE_FAILURE', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=638,
  serialized_end=743,
)
_sym_db.RegisterEnumDescriptor(_ZATTESTRESPONSECODE)

ZAttestResponseCode = enum_type_wrapper.EnumTypeWrapper(_ZATTESTRESPONSECODE)
ATTEST_REQ_NONE = 0
ATTEST_REQ_CERT = 1
ATTEST_REQ_NONCE = 2
ATTEST_REQ_QUOTE = 3
ATTEST_RESP_NONE = 0
ATTEST_RESP_CERT = 1
ATTEST_RESP_NONCE = 2
ATTEST_RESP_QUOTE_RESP = 3
ATTEST_RESPONSE_NONE = 0
ATTEST_RESPONSE_SUCCESS = 1
ATTEST_RESPONSE_FAILURE = 2



_ZATTESTREQ = _descriptor.Descriptor(
  name='ZAttestReq',
  full_name='ZAttestReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reqType', full_name='ZAttestReq.reqType', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quote', full_name='ZAttestReq.quote', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='certs', full_name='ZAttestReq.certs', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=42,
  serialized_end=141,
)


_ZATTESTRESPONSE = _descriptor.Descriptor(
  name='ZAttestResponse',
  full_name='ZAttestResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='respType', full_name='ZAttestResponse.respType', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nonce', full_name='ZAttestResponse.nonce', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quoteResp', full_name='ZAttestResponse.quoteResp', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=143,
  serialized_end=268,
)


_ZATTESTNONCERESP = _descriptor.Descriptor(
  name='ZAttestNonceResp',
  full_name='ZAttestNonceResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nonce', full_name='ZAttestNonceResp.nonce', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=270,
  serialized_end=303,
)


_ZATTESTQUOTE = _descriptor.Descriptor(
  name='ZAttestQuote',
  full_name='ZAttestQuote',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='attestData', full_name='ZAttestQuote.attestData', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signature', full_name='ZAttestQuote.signature', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=305,
  serialized_end=358,
)


_ZATTESTQUOTERESP = _descriptor.Descriptor(
  name='ZAttestQuoteResp',
  full_name='ZAttestQuoteResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='response', full_name='ZAttestQuoteResp.response', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=360,
  serialized_end=418,
)

_ZATTESTREQ.fields_by_name['reqType'].enum_type = _ZATTESTREQTYPE
_ZATTESTREQ.fields_by_name['quote'].message_type = _ZATTESTQUOTE
_ZATTESTREQ.fields_by_name['certs'].message_type = certs_dot_certs__pb2._ZCERT
_ZATTESTRESPONSE.fields_by_name['respType'].enum_type = _ZATTESTRESPTYPE
_ZATTESTRESPONSE.fields_by_name['nonce'].message_type = _ZATTESTNONCERESP
_ZATTESTRESPONSE.fields_by_name['quoteResp'].message_type = _ZATTESTQUOTERESP
_ZATTESTQUOTERESP.fields_by_name['response'].enum_type = _ZATTESTRESPONSECODE
DESCRIPTOR.message_types_by_name['ZAttestReq'] = _ZATTESTREQ
DESCRIPTOR.message_types_by_name['ZAttestResponse'] = _ZATTESTRESPONSE
DESCRIPTOR.message_types_by_name['ZAttestNonceResp'] = _ZATTESTNONCERESP
DESCRIPTOR.message_types_by_name['ZAttestQuote'] = _ZATTESTQUOTE
DESCRIPTOR.message_types_by_name['ZAttestQuoteResp'] = _ZATTESTQUOTERESP
DESCRIPTOR.enum_types_by_name['ZAttestReqType'] = _ZATTESTREQTYPE
DESCRIPTOR.enum_types_by_name['ZAttestRespType'] = _ZATTESTRESPTYPE
DESCRIPTOR.enum_types_by_name['ZAttestResponseCode'] = _ZATTESTRESPONSECODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ZAttestReq = _reflection.GeneratedProtocolMessageType('ZAttestReq', (_message.Message,), dict(
  DESCRIPTOR = _ZATTESTREQ,
  __module__ = 'attest.attest_pb2'
  # @@protoc_insertion_point(class_scope:ZAttestReq)
  ))
_sym_db.RegisterMessage(ZAttestReq)

ZAttestResponse = _reflection.GeneratedProtocolMessageType('ZAttestResponse', (_message.Message,), dict(
  DESCRIPTOR = _ZATTESTRESPONSE,
  __module__ = 'attest.attest_pb2'
  # @@protoc_insertion_point(class_scope:ZAttestResponse)
  ))
_sym_db.RegisterMessage(ZAttestResponse)

ZAttestNonceResp = _reflection.GeneratedProtocolMessageType('ZAttestNonceResp', (_message.Message,), dict(
  DESCRIPTOR = _ZATTESTNONCERESP,
  __module__ = 'attest.attest_pb2'
  # @@protoc_insertion_point(class_scope:ZAttestNonceResp)
  ))
_sym_db.RegisterMessage(ZAttestNonceResp)

ZAttestQuote = _reflection.GeneratedProtocolMessageType('ZAttestQuote', (_message.Message,), dict(
  DESCRIPTOR = _ZATTESTQUOTE,
  __module__ = 'attest.attest_pb2'
  # @@protoc_insertion_point(class_scope:ZAttestQuote)
  ))
_sym_db.RegisterMessage(ZAttestQuote)

ZAttestQuoteResp = _reflection.GeneratedProtocolMessageType('ZAttestQuoteResp', (_message.Message,), dict(
  DESCRIPTOR = _ZATTESTQUOTERESP,
  __module__ = 'attest.attest_pb2'
  # @@protoc_insertion_point(class_scope:ZAttestQuoteResp)
  ))
_sym_db.RegisterMessage(ZAttestQuoteResp)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
