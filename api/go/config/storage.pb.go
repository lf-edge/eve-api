// Copyright(c) 2017-2018 Zededa, Inc.
// All rights reserved.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.6.1
// source: config/storage.proto

package config

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DsType int32

const (
	DsType_DsUnknown           DsType = 0
	DsType_DsHttp              DsType = 1
	DsType_DsHttps             DsType = 2
	DsType_DsS3                DsType = 3
	DsType_DsSFTP              DsType = 4
	DsType_DsContainerRegistry DsType = 5
	DsType_DsAzureBlob         DsType = 6
)

// Enum value maps for DsType.
var (
	DsType_name = map[int32]string{
		0: "DsUnknown",
		1: "DsHttp",
		2: "DsHttps",
		3: "DsS3",
		4: "DsSFTP",
		5: "DsContainerRegistry",
		6: "DsAzureBlob",
	}
	DsType_value = map[string]int32{
		"DsUnknown":           0,
		"DsHttp":              1,
		"DsHttps":             2,
		"DsS3":                3,
		"DsSFTP":              4,
		"DsContainerRegistry": 5,
		"DsAzureBlob":         6,
	}
)

func (x DsType) Enum() *DsType {
	p := new(DsType)
	*p = x
	return p
}

func (x DsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DsType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_storage_proto_enumTypes[0].Descriptor()
}

func (DsType) Type() protoreflect.EnumType {
	return &file_config_storage_proto_enumTypes[0]
}

func (x DsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DsType.Descriptor instead.
func (DsType) EnumDescriptor() ([]byte, []int) {
	return file_config_storage_proto_rawDescGZIP(), []int{0}
}

type Format int32

const (
	Format_FmtUnknown Format = 0
	Format_RAW        Format = 1
	Format_QCOW       Format = 2
	Format_QCOW2      Format = 3
	Format_VHD        Format = 4
	Format_VMDK       Format = 5
	Format_OVA        Format = 6
	Format_VHDX       Format = 7
	Format_CONTAINER  Format = 8
)

// Enum value maps for Format.
var (
	Format_name = map[int32]string{
		0: "FmtUnknown",
		1: "RAW",
		2: "QCOW",
		3: "QCOW2",
		4: "VHD",
		5: "VMDK",
		6: "OVA",
		7: "VHDX",
		8: "CONTAINER",
	}
	Format_value = map[string]int32{
		"FmtUnknown": 0,
		"RAW":        1,
		"QCOW":       2,
		"QCOW2":      3,
		"VHD":        4,
		"VMDK":       5,
		"OVA":        6,
		"VHDX":       7,
		"CONTAINER":  8,
	}
)

func (x Format) Enum() *Format {
	p := new(Format)
	*p = x
	return p
}

func (x Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Format) Descriptor() protoreflect.EnumDescriptor {
	return file_config_storage_proto_enumTypes[1].Descriptor()
}

func (Format) Type() protoreflect.EnumType {
	return &file_config_storage_proto_enumTypes[1]
}

func (x Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Format.Descriptor instead.
func (Format) EnumDescriptor() ([]byte, []int) {
	return file_config_storage_proto_rawDescGZIP(), []int{1}
}

type Target int32

const (
	Target_TgtUnknown Target = 0
	Target_Disk       Target = 1
	Target_Kernel     Target = 2
	Target_Initrd     Target = 3
	Target_RamDisk    Target = 4 // XXX DeviceTree?
)

// Enum value maps for Target.
var (
	Target_name = map[int32]string{
		0: "TgtUnknown",
		1: "Disk",
		2: "Kernel",
		3: "Initrd",
		4: "RamDisk",
	}
	Target_value = map[string]int32{
		"TgtUnknown": 0,
		"Disk":       1,
		"Kernel":     2,
		"Initrd":     3,
		"RamDisk":    4,
	}
)

func (x Target) Enum() *Target {
	p := new(Target)
	*p = x
	return p
}

func (x Target) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Target) Descriptor() protoreflect.EnumDescriptor {
	return file_config_storage_proto_enumTypes[2].Descriptor()
}

func (Target) Type() protoreflect.EnumType {
	return &file_config_storage_proto_enumTypes[2]
}

func (x Target) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Target.Descriptor instead.
func (Target) EnumDescriptor() ([]byte, []int) {
	return file_config_storage_proto_rawDescGZIP(), []int{2}
}

type DriveType int32

const (
	DriveType_Unclassified DriveType = 0
	DriveType_CDROM        DriveType = 1
	DriveType_HDD          DriveType = 2
	DriveType_NET          DriveType = 3
	// this type is allocate the empty disk of maxsizebytes specified
	DriveType_HDD_EMPTY DriveType = 4
)

// Enum value maps for DriveType.
var (
	DriveType_name = map[int32]string{
		0: "Unclassified",
		1: "CDROM",
		2: "HDD",
		3: "NET",
		4: "HDD_EMPTY",
	}
	DriveType_value = map[string]int32{
		"Unclassified": 0,
		"CDROM":        1,
		"HDD":          2,
		"NET":          3,
		"HDD_EMPTY":    4,
	}
)

func (x DriveType) Enum() *DriveType {
	p := new(DriveType)
	*p = x
	return p
}

func (x DriveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DriveType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_storage_proto_enumTypes[3].Descriptor()
}

func (DriveType) Type() protoreflect.EnumType {
	return &file_config_storage_proto_enumTypes[3]
}

func (x DriveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DriveType.Descriptor instead.
func (DriveType) EnumDescriptor() ([]byte, []int) {
	return file_config_storage_proto_rawDescGZIP(), []int{3}
}

type SignatureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intercertsurl string `protobuf:"bytes,1,opt,name=intercertsurl,proto3" json:"intercertsurl,omitempty"`
	Signercerturl string `protobuf:"bytes,2,opt,name=signercerturl,proto3" json:"signercerturl,omitempty"`
	Signature     []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SignatureInfo) Reset() {
	*x = SignatureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureInfo) ProtoMessage() {}

func (x *SignatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_config_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureInfo.ProtoReflect.Descriptor instead.
func (*SignatureInfo) Descriptor() ([]byte, []int) {
	return file_config_storage_proto_rawDescGZIP(), []int{0}
}

func (x *SignatureInfo) GetIntercertsurl() string {
	if x != nil {
		return x.Intercertsurl
	}
	return ""
}

func (x *SignatureInfo) GetSignercerturl() string {
	if x != nil {
		return x.Signercerturl
	}
	return ""
}

func (x *SignatureInfo) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type DatastoreConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	DType DsType `protobuf:"varint,1,opt,name=dType,proto3,enum=DsType" json:"dType,omitempty"`
	Fqdn  string `protobuf:"bytes,2,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	// to be deprecated, use cipherData instead
	ApiKey string `protobuf:"bytes,3,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	// to be deprecated, use cipherData instead
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// depending on datastore types, it could be bucket or path
	Dpath string `protobuf:"bytes,5,opt,name=dpath,proto3" json:"dpath,omitempty"`
	// Applies for some datastore types
	Region string `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	// contains the encrypted credentials
	CipherData *CipherBlock `protobuf:"bytes,7,opt,name=cipherData,proto3" json:"cipherData,omitempty"`
}

func (x *DatastoreConfig) Reset() {
	*x = DatastoreConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatastoreConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatastoreConfig) ProtoMessage() {}

func (x *DatastoreConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatastoreConfig.ProtoReflect.Descriptor instead.
func (*DatastoreConfig) Descriptor() ([]byte, []int) {
	return file_config_storage_proto_rawDescGZIP(), []int{1}
}

func (x *DatastoreConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DatastoreConfig) GetDType() DsType {
	if x != nil {
		return x.DType
	}
	return DsType_DsUnknown
}

func (x *DatastoreConfig) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *DatastoreConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *DatastoreConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DatastoreConfig) GetDpath() string {
	if x != nil {
		return x.Dpath
	}
	return ""
}

func (x *DatastoreConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DatastoreConfig) GetCipherData() *CipherBlock {
	if x != nil {
		return x.CipherData
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuidandversion *UUIDandVersion `protobuf:"bytes,1,opt,name=uuidandversion,proto3" json:"uuidandversion,omitempty"`
	// it could be relative path/name as well
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Sha256  string `protobuf:"bytes,3,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Iformat Format `protobuf:"varint,4,opt,name=iformat,proto3,enum=Format" json:"iformat,omitempty"`
	// if its signed image
	Siginfo   *SignatureInfo `protobuf:"bytes,5,opt,name=siginfo,proto3" json:"siginfo,omitempty"`
	DsId      string         `protobuf:"bytes,6,opt,name=dsId,proto3" json:"dsId,omitempty"`
	SizeBytes int64          `protobuf:"varint,8,opt,name=sizeBytes,proto3" json:"sizeBytes,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_config_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_config_storage_proto_rawDescGZIP(), []int{2}
}

func (x *Image) GetUuidandversion() *UUIDandVersion {
	if x != nil {
		return x.Uuidandversion
	}
	return nil
}

func (x *Image) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Image) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *Image) GetIformat() Format {
	if x != nil {
		return x.Iformat
	}
	return Format_FmtUnknown
}

func (x *Image) GetSiginfo() *SignatureInfo {
	if x != nil {
		return x.Siginfo
	}
	return nil
}

func (x *Image) GetDsId() string {
	if x != nil {
		return x.DsId
	}
	return ""
}

func (x *Image) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

type Drive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image    *Image    `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Readonly bool      `protobuf:"varint,5,opt,name=readonly,proto3" json:"readonly,omitempty"`
	Preserve bool      `protobuf:"varint,6,opt,name=preserve,proto3" json:"preserve,omitempty"`
	Drvtype  DriveType `protobuf:"varint,8,opt,name=drvtype,proto3,enum=DriveType" json:"drvtype,omitempty"`
	Target   Target    `protobuf:"varint,9,opt,name=target,proto3,enum=Target" json:"target,omitempty"`
	// Initial image need to be resized to this size.
	// A value of 0 will indicate that no resizing is required
	Maxsizebytes int64 `protobuf:"varint,10,opt,name=maxsizebytes,proto3" json:"maxsizebytes,omitempty"`
}

func (x *Drive) Reset() {
	*x = Drive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Drive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Drive) ProtoMessage() {}

func (x *Drive) ProtoReflect() protoreflect.Message {
	mi := &file_config_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Drive.ProtoReflect.Descriptor instead.
func (*Drive) Descriptor() ([]byte, []int) {
	return file_config_storage_proto_rawDescGZIP(), []int{3}
}

func (x *Drive) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Drive) GetReadonly() bool {
	if x != nil {
		return x.Readonly
	}
	return false
}

func (x *Drive) GetPreserve() bool {
	if x != nil {
		return x.Preserve
	}
	return false
}

func (x *Drive) GetDrvtype() DriveType {
	if x != nil {
		return x.Drvtype
	}
	return DriveType_Unclassified
}

func (x *Drive) GetTarget() Target {
	if x != nil {
		return x.Target
	}
	return Target_TgtUnknown
}

func (x *Drive) GetMaxsizebytes() int64 {
	if x != nil {
		return x.Maxsizebytes
	}
	return 0
}

var File_config_storage_proto protoreflect.FileDescriptor

var file_config_storage_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64,
	0x65, 0x76, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x61, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x63, 0x65, 0x72, 0x74, 0x73, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x72, 0x74, 0x73, 0x75, 0x72, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x63, 0x65, 0x72, 0x74, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x63, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x44, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0a,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0a,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0xeb, 0x01, 0x0a, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x75, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x64, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x75,
	0x75, 0x69, 0x64, 0x61, 0x6e, 0x64, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x21, 0x0a, 0x07, 0x69, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x52, 0x07, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x07,
	0x73, 0x69, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73,
	0x69, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x73, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x05, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x64, 0x72, 0x76, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x64, 0x72, 0x76, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x73, 0x69, 0x7a, 0x65, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x73, 0x69, 0x7a, 0x65, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x2a, 0x70, 0x0a, 0x06, 0x44, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a,
	0x09, 0x44, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x73, 0x48, 0x74, 0x74, 0x70, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x73, 0x48, 0x74,
	0x74, 0x70, 0x73, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x73, 0x53, 0x33, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x73, 0x53, 0x46, 0x54, 0x50, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x44,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x73, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x42,
	0x6c, 0x6f, 0x62, 0x10, 0x06, 0x2a, 0x6b, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x0e, 0x0a, 0x0a, 0x46, 0x6d, 0x74, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x52, 0x41, 0x57, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x51, 0x43, 0x4f, 0x57,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x43, 0x4f, 0x57, 0x32, 0x10, 0x03, 0x12, 0x07, 0x0a,
	0x03, 0x56, 0x48, 0x44, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x4d, 0x44, 0x4b, 0x10, 0x05,
	0x12, 0x07, 0x0a, 0x03, 0x4f, 0x56, 0x41, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x48, 0x44,
	0x58, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52,
	0x10, 0x08, 0x2a, 0x47, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x67, 0x74, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x44, 0x69, 0x73, 0x6b, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x6e, 0x69, 0x74, 0x72, 0x64, 0x10, 0x03, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x61, 0x6d, 0x44, 0x69, 0x73, 0x6b, 0x10, 0x04, 0x2a, 0x49, 0x0a, 0x09, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x44,
	0x52, 0x4f, 0x4d, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x44, 0x44, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x4e, 0x45, 0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x44, 0x44, 0x5f, 0x45,
	0x4d, 0x50, 0x54, 0x59, 0x10, 0x04, 0x42, 0x47, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x65,
	0x64, 0x65, 0x64, 0x61, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x66, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x65, 0x76,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_storage_proto_rawDescOnce sync.Once
	file_config_storage_proto_rawDescData = file_config_storage_proto_rawDesc
)

func file_config_storage_proto_rawDescGZIP() []byte {
	file_config_storage_proto_rawDescOnce.Do(func() {
		file_config_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_storage_proto_rawDescData)
	})
	return file_config_storage_proto_rawDescData
}

var file_config_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_config_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_config_storage_proto_goTypes = []interface{}{
	(DsType)(0),             // 0: DsType
	(Format)(0),             // 1: Format
	(Target)(0),             // 2: Target
	(DriveType)(0),          // 3: DriveType
	(*SignatureInfo)(nil),   // 4: SignatureInfo
	(*DatastoreConfig)(nil), // 5: DatastoreConfig
	(*Image)(nil),           // 6: Image
	(*Drive)(nil),           // 7: Drive
	(*CipherBlock)(nil),     // 8: CipherBlock
	(*UUIDandVersion)(nil),  // 9: UUIDandVersion
}
var file_config_storage_proto_depIdxs = []int32{
	0, // 0: DatastoreConfig.dType:type_name -> DsType
	8, // 1: DatastoreConfig.cipherData:type_name -> CipherBlock
	9, // 2: Image.uuidandversion:type_name -> UUIDandVersion
	1, // 3: Image.iformat:type_name -> Format
	4, // 4: Image.siginfo:type_name -> SignatureInfo
	6, // 5: Drive.image:type_name -> Image
	3, // 6: Drive.drvtype:type_name -> DriveType
	2, // 7: Drive.target:type_name -> Target
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_config_storage_proto_init() }
func file_config_storage_proto_init() {
	if File_config_storage_proto != nil {
		return
	}
	file_config_devcommon_proto_init()
	file_config_acipherinfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_config_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatastoreConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Drive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_storage_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_storage_proto_goTypes,
		DependencyIndexes: file_config_storage_proto_depIdxs,
		EnumInfos:         file_config_storage_proto_enumTypes,
		MessageInfos:      file_config_storage_proto_msgTypes,
	}.Build()
	File_config_storage_proto = out.File
	file_config_storage_proto_rawDesc = nil
	file_config_storage_proto_goTypes = nil
	file_config_storage_proto_depIdxs = nil
}
