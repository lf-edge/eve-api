// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config/netconfig.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NetworkConfig struct {
	Id   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type NetworkType `protobuf:"varint,5,opt,name=type,proto3,enum=NetworkType" json:"type,omitempty"`
	// network ip specification
	Ip  *Ipspec               `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	Dns []*ZnetStaticDNSEntry `protobuf:"bytes,7,rep,name=dns,proto3" json:"dns,omitempty"`
	// enterprise proxy
	EntProxy *ProxyConfig `protobuf:"bytes,8,opt,name=entProxy,proto3" json:"entProxy,omitempty"`
	// wireless specification
	Wireless             *WirelessConfig `protobuf:"bytes,10,opt,name=wireless,proto3" json:"wireless,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NetworkConfig) Reset()         { *m = NetworkConfig{} }
func (m *NetworkConfig) String() string { return proto.CompactTextString(m) }
func (*NetworkConfig) ProtoMessage()    {}
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe7099d7afb17549, []int{0}
}

func (m *NetworkConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkConfig.Unmarshal(m, b)
}
func (m *NetworkConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkConfig.Marshal(b, m, deterministic)
}
func (m *NetworkConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkConfig.Merge(m, src)
}
func (m *NetworkConfig) XXX_Size() int {
	return xxx_messageInfo_NetworkConfig.Size(m)
}
func (m *NetworkConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkConfig proto.InternalMessageInfo

func (m *NetworkConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NetworkConfig) GetType() NetworkType {
	if m != nil {
		return m.Type
	}
	return NetworkType_NETWORKTYPENOOP
}

func (m *NetworkConfig) GetIp() *Ipspec {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *NetworkConfig) GetDns() []*ZnetStaticDNSEntry {
	if m != nil {
		return m.Dns
	}
	return nil
}

func (m *NetworkConfig) GetEntProxy() *ProxyConfig {
	if m != nil {
		return m.EntProxy
	}
	return nil
}

func (m *NetworkConfig) GetWireless() *WirelessConfig {
	if m != nil {
		return m.Wireless
	}
	return nil
}

type NetworkAdapter struct {
	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NetworkId string `protobuf:"bytes,3,opt,name=networkId,proto3" json:"networkId,omitempty"`
	Addr      string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
	Hostname  string `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// more configuration for getting addr/EID
	CryptoEid     string `protobuf:"bytes,10,opt,name=cryptoEid,proto3" json:"cryptoEid,omitempty"`
	Lispsignature string `protobuf:"bytes,6,opt,name=lispsignature,proto3" json:"lispsignature,omitempty"`
	Pemcert       []byte `protobuf:"bytes,7,opt,name=pemcert,proto3" json:"pemcert,omitempty"`
	Pemprivatekey []byte `protobuf:"bytes,8,opt,name=pemprivatekey,proto3" json:"pemprivatekey,omitempty"`
	// Used in case of P2V, where we want to specify a macAddress
	// to vif, that is simulated towards app
	MacAddress string `protobuf:"bytes,9,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	// firewall
	Acls                 []*ACE   `protobuf:"bytes,40,rep,name=acls,proto3" json:"acls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkAdapter) Reset()         { *m = NetworkAdapter{} }
func (m *NetworkAdapter) String() string { return proto.CompactTextString(m) }
func (*NetworkAdapter) ProtoMessage()    {}
func (*NetworkAdapter) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe7099d7afb17549, []int{1}
}

func (m *NetworkAdapter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkAdapter.Unmarshal(m, b)
}
func (m *NetworkAdapter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkAdapter.Marshal(b, m, deterministic)
}
func (m *NetworkAdapter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkAdapter.Merge(m, src)
}
func (m *NetworkAdapter) XXX_Size() int {
	return xxx_messageInfo_NetworkAdapter.Size(m)
}
func (m *NetworkAdapter) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkAdapter.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkAdapter proto.InternalMessageInfo

func (m *NetworkAdapter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkAdapter) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *NetworkAdapter) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *NetworkAdapter) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *NetworkAdapter) GetCryptoEid() string {
	if m != nil {
		return m.CryptoEid
	}
	return ""
}

func (m *NetworkAdapter) GetLispsignature() string {
	if m != nil {
		return m.Lispsignature
	}
	return ""
}

func (m *NetworkAdapter) GetPemcert() []byte {
	if m != nil {
		return m.Pemcert
	}
	return nil
}

func (m *NetworkAdapter) GetPemprivatekey() []byte {
	if m != nil {
		return m.Pemprivatekey
	}
	return nil
}

func (m *NetworkAdapter) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *NetworkAdapter) GetAcls() []*ACE {
	if m != nil {
		return m.Acls
	}
	return nil
}

type WirelessConfig struct {
	Type                 WirelessType      `protobuf:"varint,1,opt,name=type,proto3,enum=WirelessType" json:"type,omitempty"`
	CellularCfg          []*CellularConfig `protobuf:"bytes,5,rep,name=cellularCfg,proto3" json:"cellularCfg,omitempty"`
	WifiCfg              []*WifiConfig     `protobuf:"bytes,10,rep,name=wifiCfg,proto3" json:"wifiCfg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WirelessConfig) Reset()         { *m = WirelessConfig{} }
func (m *WirelessConfig) String() string { return proto.CompactTextString(m) }
func (*WirelessConfig) ProtoMessage()    {}
func (*WirelessConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe7099d7afb17549, []int{2}
}

func (m *WirelessConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WirelessConfig.Unmarshal(m, b)
}
func (m *WirelessConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WirelessConfig.Marshal(b, m, deterministic)
}
func (m *WirelessConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WirelessConfig.Merge(m, src)
}
func (m *WirelessConfig) XXX_Size() int {
	return xxx_messageInfo_WirelessConfig.Size(m)
}
func (m *WirelessConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_WirelessConfig.DiscardUnknown(m)
}

var xxx_messageInfo_WirelessConfig proto.InternalMessageInfo

func (m *WirelessConfig) GetType() WirelessType {
	if m != nil {
		return m.Type
	}
	return WirelessType_TypeNOOP
}

func (m *WirelessConfig) GetCellularCfg() []*CellularConfig {
	if m != nil {
		return m.CellularCfg
	}
	return nil
}

func (m *WirelessConfig) GetWifiCfg() []*WifiConfig {
	if m != nil {
		return m.WifiCfg
	}
	return nil
}

type CellularConfig struct {
	APN                  string   `protobuf:"bytes,1,opt,name=APN,proto3" json:"APN,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellularConfig) Reset()         { *m = CellularConfig{} }
func (m *CellularConfig) String() string { return proto.CompactTextString(m) }
func (*CellularConfig) ProtoMessage()    {}
func (*CellularConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe7099d7afb17549, []int{3}
}

func (m *CellularConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellularConfig.Unmarshal(m, b)
}
func (m *CellularConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellularConfig.Marshal(b, m, deterministic)
}
func (m *CellularConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellularConfig.Merge(m, src)
}
func (m *CellularConfig) XXX_Size() int {
	return xxx_messageInfo_CellularConfig.Size(m)
}
func (m *CellularConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CellularConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CellularConfig proto.InternalMessageInfo

func (m *CellularConfig) GetAPN() string {
	if m != nil {
		return m.APN
	}
	return ""
}

type WifiConfig struct {
	WifiSSID  string        `protobuf:"bytes,1,opt,name=wifiSSID,proto3" json:"wifiSSID,omitempty"`
	KeyScheme WiFiKeyScheme `protobuf:"varint,2,opt,name=keyScheme,proto3,enum=WiFiKeyScheme" json:"keyScheme,omitempty"`
	// to be deprecated, use cipherData instead
	Identity string `protobuf:"bytes,5,opt,name=identity,proto3" json:"identity,omitempty"`
	// to be deprecated, use cipherData instead
	Password             string                 `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
	Crypto               *WifiConfigCryptoblock `protobuf:"bytes,20,opt,name=crypto,proto3" json:"crypto,omitempty"`
	Priority             int32                  `protobuf:"varint,25,opt,name=priority,proto3" json:"priority,omitempty"`
	CipherData           *CipherBlock           `protobuf:"bytes,30,opt,name=cipherData,proto3" json:"cipherData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WifiConfig) Reset()         { *m = WifiConfig{} }
func (m *WifiConfig) String() string { return proto.CompactTextString(m) }
func (*WifiConfig) ProtoMessage()    {}
func (*WifiConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe7099d7afb17549, []int{4}
}

func (m *WifiConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WifiConfig.Unmarshal(m, b)
}
func (m *WifiConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WifiConfig.Marshal(b, m, deterministic)
}
func (m *WifiConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WifiConfig.Merge(m, src)
}
func (m *WifiConfig) XXX_Size() int {
	return xxx_messageInfo_WifiConfig.Size(m)
}
func (m *WifiConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_WifiConfig.DiscardUnknown(m)
}

var xxx_messageInfo_WifiConfig proto.InternalMessageInfo

func (m *WifiConfig) GetWifiSSID() string {
	if m != nil {
		return m.WifiSSID
	}
	return ""
}

func (m *WifiConfig) GetKeyScheme() WiFiKeyScheme {
	if m != nil {
		return m.KeyScheme
	}
	return WiFiKeyScheme_SchemeNOOP
}

func (m *WifiConfig) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *WifiConfig) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *WifiConfig) GetCrypto() *WifiConfigCryptoblock {
	if m != nil {
		return m.Crypto
	}
	return nil
}

func (m *WifiConfig) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *WifiConfig) GetCipherData() *CipherBlock {
	if m != nil {
		return m.CipherData
	}
	return nil
}

type WifiConfigCryptoblock struct {
	Identity             string   `protobuf:"bytes,11,opt,name=identity,proto3" json:"identity,omitempty"`
	Password             string   `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WifiConfigCryptoblock) Reset()         { *m = WifiConfigCryptoblock{} }
func (m *WifiConfigCryptoblock) String() string { return proto.CompactTextString(m) }
func (*WifiConfigCryptoblock) ProtoMessage()    {}
func (*WifiConfigCryptoblock) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe7099d7afb17549, []int{4, 0}
}

func (m *WifiConfigCryptoblock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WifiConfigCryptoblock.Unmarshal(m, b)
}
func (m *WifiConfigCryptoblock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WifiConfigCryptoblock.Marshal(b, m, deterministic)
}
func (m *WifiConfigCryptoblock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WifiConfigCryptoblock.Merge(m, src)
}
func (m *WifiConfigCryptoblock) XXX_Size() int {
	return xxx_messageInfo_WifiConfigCryptoblock.Size(m)
}
func (m *WifiConfigCryptoblock) XXX_DiscardUnknown() {
	xxx_messageInfo_WifiConfigCryptoblock.DiscardUnknown(m)
}

var xxx_messageInfo_WifiConfigCryptoblock proto.InternalMessageInfo

func (m *WifiConfigCryptoblock) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *WifiConfigCryptoblock) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*NetworkConfig)(nil), "NetworkConfig")
	proto.RegisterType((*NetworkAdapter)(nil), "NetworkAdapter")
	proto.RegisterType((*WirelessConfig)(nil), "WirelessConfig")
	proto.RegisterType((*CellularConfig)(nil), "CellularConfig")
	proto.RegisterType((*WifiConfig)(nil), "WifiConfig")
	proto.RegisterType((*WifiConfigCryptoblock)(nil), "WifiConfig.cryptoblock")
}

func init() {
	proto.RegisterFile("config/netconfig.proto", fileDescriptor_fe7099d7afb17549)
}

var fileDescriptor_fe7099d7afb17549 = []byte{
	// 657 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xed, 0x6e, 0x22, 0x37,
	0x14, 0xd5, 0xf0, 0x11, 0xe0, 0x42, 0x48, 0xe5, 0x54, 0x8d, 0x1b, 0x55, 0x29, 0x45, 0x89, 0x34,
	0x52, 0x53, 0xa3, 0xa6, 0x4f, 0x40, 0x08, 0xad, 0xa2, 0x4a, 0x51, 0x34, 0xac, 0x14, 0x29, 0xff,
	0x1c, 0xfb, 0x02, 0x16, 0x33, 0x63, 0xcb, 0x63, 0xc2, 0xb2, 0xef, 0xb0, 0xef, 0xb2, 0x8f, 0xb2,
	0x3f, 0xf7, 0x71, 0x56, 0xe3, 0x99, 0xe1, 0xe3, 0xcf, 0xfe, 0xf3, 0x3d, 0xe7, 0xdc, 0x63, 0xdf,
	0x7b, 0x60, 0xe0, 0x17, 0xa1, 0xd3, 0xb9, 0x5a, 0x8c, 0x52, 0x74, 0xc5, 0x89, 0x19, 0xab, 0x9d,
	0xbe, 0xa4, 0x25, 0xce, 0x85, 0x32, 0x4b, 0xb4, 0x2a, 0x9d, 0xeb, 0x92, 0x39, 0x2b, 0x99, 0xf9,
	0xa6, 0x04, 0xce, 0x0f, 0x2c, 0x92, 0xb4, 0x00, 0x87, 0xdf, 0x02, 0x38, 0x7d, 0x42, 0xb7, 0xd1,
	0x76, 0x35, 0xf1, 0x34, 0xe9, 0x43, 0x4d, 0x49, 0x1a, 0x0c, 0x82, 0xb0, 0x13, 0xd5, 0x94, 0x24,
	0x03, 0x68, 0xb8, 0xad, 0x41, 0xda, 0x1c, 0x04, 0x61, 0xff, 0xae, 0xc7, 0x4a, 0xf5, 0x87, 0xad,
	0xc1, 0xc8, 0x33, 0xe4, 0x02, 0x6a, 0xca, 0xd0, 0x93, 0x41, 0x10, 0x76, 0xef, 0x5a, 0x4c, 0x99,
	0xcc, 0xa0, 0x88, 0x6a, 0xca, 0x90, 0x1b, 0xa8, 0xcb, 0x34, 0xa3, 0xad, 0x41, 0x3d, 0xec, 0xde,
	0x9d, 0xb3, 0xd7, 0x14, 0xdd, 0xcc, 0x71, 0xa7, 0xc4, 0xc3, 0xd3, 0x6c, 0x9a, 0x3a, 0xbb, 0x8d,
	0x72, 0x9e, 0x84, 0xd0, 0xc6, 0xd4, 0x3d, 0x5b, 0xfd, 0x71, 0x4b, 0xdb, 0xde, 0xa5, 0xc7, 0x7c,
	0x55, 0xbc, 0x28, 0xda, 0xb1, 0xe4, 0x4f, 0x68, 0x6f, 0x94, 0xc5, 0x18, 0xb3, 0x8c, 0x82, 0x57,
	0x9e, 0xb1, 0x97, 0x12, 0xa8, 0xc4, 0x95, 0x60, 0xf8, 0xa5, 0x06, 0xfd, 0xf2, 0xb1, 0x63, 0xc9,
	0x8d, 0x43, 0x4b, 0x08, 0x34, 0x52, 0x9e, 0x60, 0x39, 0x9d, 0x3f, 0x93, 0xdf, 0xa0, 0x93, 0x16,
	0xaa, 0x47, 0x49, 0xeb, 0x9e, 0xd8, 0x03, 0x79, 0x07, 0x97, 0xd2, 0xd2, 0x46, 0xd1, 0x91, 0x9f,
	0xc9, 0x25, 0xb4, 0x97, 0x3a, 0x73, 0xde, 0xa9, 0xe9, 0xf1, 0x5d, 0x9d, 0xbb, 0x09, 0xbb, 0x35,
	0x4e, 0x4f, 0x95, 0xf4, 0x4f, 0xec, 0x44, 0x7b, 0x80, 0x5c, 0xc3, 0x69, 0xac, 0x32, 0x93, 0xa9,
	0x45, 0xca, 0xdd, 0xda, 0xa2, 0x5f, 0x5a, 0x27, 0x3a, 0x06, 0x09, 0x85, 0x96, 0xc1, 0x44, 0xa0,
	0x75, 0xb4, 0x35, 0x08, 0xc2, 0x5e, 0x54, 0x95, 0x79, 0xbf, 0xc1, 0xc4, 0x58, 0xf5, 0xce, 0x1d,
	0xae, 0xb0, 0x58, 0x57, 0x2f, 0x3a, 0x06, 0xc9, 0x15, 0x40, 0xc2, 0xc5, 0x58, 0x4a, 0x9b, 0xef,
	0xa9, 0xe3, 0xaf, 0x38, 0x40, 0x08, 0x85, 0x06, 0x17, 0x71, 0x46, 0x43, 0x9f, 0x4b, 0x83, 0x8d,
	0x27, 0xd3, 0xc8, 0x23, 0xc3, 0xcf, 0x01, 0xf4, 0x8f, 0xf7, 0x49, 0xfe, 0x28, 0xe3, 0x0f, 0x7c,
	0xfc, 0xa7, 0xbb, 0x75, 0x1f, 0xe4, 0xff, 0x37, 0x74, 0x05, 0xc6, 0xf1, 0x3a, 0xe6, 0x76, 0x32,
	0x5f, 0xd0, 0xa6, 0xb7, 0x3d, 0x63, 0x93, 0x0a, 0x2b, 0x82, 0x39, 0xd4, 0x90, 0x1b, 0x68, 0x6d,
	0xd4, 0x5c, 0xe5, 0x72, 0xf0, 0xf2, 0x2e, 0x7b, 0xc9, 0xeb, 0x42, 0x5a, 0x71, 0xc3, 0x21, 0xf4,
	0x8f, 0x5d, 0xc8, 0x4f, 0x50, 0x1f, 0x3f, 0x3f, 0x95, 0x01, 0xe6, 0xc7, 0xe1, 0xd7, 0x1a, 0xc0,
	0xbe, 0x37, 0x0f, 0x27, 0xef, 0x9e, 0xcd, 0x1e, 0x1f, 0x4a, 0xd5, 0xae, 0x26, 0xb7, 0xd0, 0x59,
	0xe1, 0x76, 0x26, 0x96, 0x98, 0x20, 0xad, 0xf9, 0x81, 0xfa, 0xec, 0x45, 0xfd, 0xab, 0xfe, 0xaf,
	0xd0, 0x68, 0x2f, 0xc8, 0x9d, 0x94, 0xc4, 0xd4, 0x29, 0xb7, 0xad, 0x62, 0xae, 0xea, 0x9c, 0x33,
	0x3c, 0xcb, 0x36, 0xda, 0x56, 0x29, 0xef, 0x6a, 0x32, 0x82, 0x93, 0x22, 0x71, 0xfa, 0xb3, 0xff,
	0x89, 0x5e, 0x1c, 0x8c, 0xc6, 0x0a, 0xe6, 0x2d, 0xd6, 0x62, 0x15, 0x95, 0x32, 0x6f, 0x66, 0x95,
	0xb6, 0xf9, 0x45, 0xbf, 0x0e, 0x82, 0xb0, 0x19, 0xed, 0x6a, 0x72, 0x0b, 0x50, 0xfc, 0xb3, 0x1f,
	0xb8, 0xe3, 0xf4, 0xaa, 0xfc, 0x77, 0x4c, 0x3c, 0x74, 0xef, 0x5d, 0x0e, 0xf8, 0xcb, 0x29, 0x74,
	0x0f, 0x2e, 0x38, 0x9a, 0xa0, 0xfb, 0x83, 0x09, 0x7a, 0xc7, 0x13, 0xdc, 0xff, 0x07, 0xbf, 0x0b,
	0x9d, 0xb0, 0x4f, 0x28, 0x51, 0x72, 0x26, 0x62, 0xbd, 0x96, 0x6c, 0x9d, 0xa1, 0x7d, 0x57, 0x02,
	0x8b, 0xef, 0xc6, 0xeb, 0xf5, 0x42, 0xb9, 0xe5, 0xfa, 0x8d, 0x09, 0x9d, 0x8c, 0xe2, 0xf9, 0x5f,
	0x28, 0x17, 0x38, 0xc2, 0x77, 0x1c, 0x71, 0xa3, 0x46, 0x0b, 0x3d, 0x2a, 0x3e, 0x35, 0x6f, 0x27,
	0x5e, 0xfc, 0xcf, 0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x40, 0x09, 0xc9, 0xed, 0xbe, 0x04, 0x00,
	0x00,
}
