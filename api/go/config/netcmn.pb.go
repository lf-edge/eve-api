// Code generated by protoc-gen-go. DO NOT EDIT.
// source: netcmn.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProxyProto int32

const (
	ProxyProto_PROXY_HTTP  ProxyProto = 0
	ProxyProto_PROXY_HTTPS ProxyProto = 1
	ProxyProto_PROXY_SOCKS ProxyProto = 2
	ProxyProto_PROXY_FTP   ProxyProto = 3
	ProxyProto_PROXY_OTHER ProxyProto = 255
)

var ProxyProto_name = map[int32]string{
	0:   "PROXY_HTTP",
	1:   "PROXY_HTTPS",
	2:   "PROXY_SOCKS",
	3:   "PROXY_FTP",
	255: "PROXY_OTHER",
}

var ProxyProto_value = map[string]int32{
	"PROXY_HTTP":  0,
	"PROXY_HTTPS": 1,
	"PROXY_SOCKS": 2,
	"PROXY_FTP":   3,
	"PROXY_OTHER": 255,
}

func (x ProxyProto) String() string {
	return proto.EnumName(ProxyProto_name, int32(x))
}

func (ProxyProto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d4fb078f34bebaa1, []int{0}
}

type DHCPType int32

const (
	DHCPType_DHCPNoop DHCPType = 0
	// Statically configure the DHCP for port
	DHCPType_Static DHCPType = 1
	// Don't run any DHCP, we are in passthrough mode for app
	DHCPType_DHCPNone DHCPType = 2
	// Deprecated Server no longer
	DHCPType_deprecated_server DHCPType = 3
	// Run the DHCP client on this port
	DHCPType_Client DHCPType = 4
)

var DHCPType_name = map[int32]string{
	0: "DHCPNoop",
	1: "Static",
	2: "DHCPNone",
	3: "deprecated_server",
	4: "Client",
}

var DHCPType_value = map[string]int32{
	"DHCPNoop":          0,
	"Static":            1,
	"DHCPNone":          2,
	"deprecated_server": 3,
	"Client":            4,
}

func (x DHCPType) String() string {
	return proto.EnumName(DHCPType_name, int32(x))
}

func (DHCPType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d4fb078f34bebaa1, []int{1}
}

type NetworkType int32

const (
	NetworkType_NETWORKTYPENOOP NetworkType = 0
	NetworkType_V4              NetworkType = 4
	NetworkType_V6              NetworkType = 6
	NetworkType_CryptoV4        NetworkType = 24
	NetworkType_CryptoV6        NetworkType = 26
	NetworkType_CryptoEID       NetworkType = 14
)

var NetworkType_name = map[int32]string{
	0:  "NETWORKTYPENOOP",
	4:  "V4",
	6:  "V6",
	24: "CryptoV4",
	26: "CryptoV6",
	14: "CryptoEID",
}

var NetworkType_value = map[string]int32{
	"NETWORKTYPENOOP": 0,
	"V4":              4,
	"V6":              6,
	"CryptoV4":        24,
	"CryptoV6":        26,
	"CryptoEID":       14,
}

func (x NetworkType) String() string {
	return proto.EnumName(NetworkType_name, int32(x))
}

func (NetworkType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d4fb078f34bebaa1, []int{2}
}

type IpRange struct {
	Start                string   `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  string   `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpRange) Reset()         { *m = IpRange{} }
func (m *IpRange) String() string { return proto.CompactTextString(m) }
func (*IpRange) ProtoMessage()    {}
func (*IpRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4fb078f34bebaa1, []int{0}
}

func (m *IpRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpRange.Unmarshal(m, b)
}
func (m *IpRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpRange.Marshal(b, m, deterministic)
}
func (m *IpRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpRange.Merge(m, src)
}
func (m *IpRange) XXX_Size() int {
	return xxx_messageInfo_IpRange.Size(m)
}
func (m *IpRange) XXX_DiscardUnknown() {
	xxx_messageInfo_IpRange.DiscardUnknown(m)
}

var xxx_messageInfo_IpRange proto.InternalMessageInfo

func (m *IpRange) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *IpRange) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type ProxyServer struct {
	Proto                ProxyProto `protobuf:"varint,1,opt,name=proto,proto3,enum=ProxyProto" json:"proto,omitempty"`
	Server               string     `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	Port                 uint32     `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProxyServer) Reset()         { *m = ProxyServer{} }
func (m *ProxyServer) String() string { return proto.CompactTextString(m) }
func (*ProxyServer) ProtoMessage()    {}
func (*ProxyServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4fb078f34bebaa1, []int{1}
}

func (m *ProxyServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyServer.Unmarshal(m, b)
}
func (m *ProxyServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyServer.Marshal(b, m, deterministic)
}
func (m *ProxyServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyServer.Merge(m, src)
}
func (m *ProxyServer) XXX_Size() int {
	return xxx_messageInfo_ProxyServer.Size(m)
}
func (m *ProxyServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyServer.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyServer proto.InternalMessageInfo

func (m *ProxyServer) GetProto() ProxyProto {
	if m != nil {
		return m.Proto
	}
	return ProxyProto_PROXY_HTTP
}

func (m *ProxyServer) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *ProxyServer) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type ProxyConfig struct {
	// enable network level proxy in the form of WPAD
	NetworkProxyEnable bool `protobuf:"varint,1,opt,name=networkProxyEnable,proto3" json:"networkProxyEnable,omitempty"`
	// dedicated per protocol information
	Proxies []*ProxyServer `protobuf:"bytes,2,rep,name=proxies,proto3" json:"proxies,omitempty"`
	// exceptions seperated by commas
	Exceptions string `protobuf:"bytes,3,opt,name=exceptions,proto3" json:"exceptions,omitempty"`
	// or pacfile can be in place of others
	// base64 encoded
	Pacfile string `protobuf:"bytes,4,opt,name=pacfile,proto3" json:"pacfile,omitempty"`
	// Direct URL for wpad.dat download
	NetworkProxyURL      string   `protobuf:"bytes,5,opt,name=networkProxyURL,proto3" json:"networkProxyURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyConfig) Reset()         { *m = ProxyConfig{} }
func (m *ProxyConfig) String() string { return proto.CompactTextString(m) }
func (*ProxyConfig) ProtoMessage()    {}
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4fb078f34bebaa1, []int{2}
}

func (m *ProxyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyConfig.Unmarshal(m, b)
}
func (m *ProxyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyConfig.Marshal(b, m, deterministic)
}
func (m *ProxyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyConfig.Merge(m, src)
}
func (m *ProxyConfig) XXX_Size() int {
	return xxx_messageInfo_ProxyConfig.Size(m)
}
func (m *ProxyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyConfig proto.InternalMessageInfo

func (m *ProxyConfig) GetNetworkProxyEnable() bool {
	if m != nil {
		return m.NetworkProxyEnable
	}
	return false
}

func (m *ProxyConfig) GetProxies() []*ProxyServer {
	if m != nil {
		return m.Proxies
	}
	return nil
}

func (m *ProxyConfig) GetExceptions() string {
	if m != nil {
		return m.Exceptions
	}
	return ""
}

func (m *ProxyConfig) GetPacfile() string {
	if m != nil {
		return m.Pacfile
	}
	return ""
}

func (m *ProxyConfig) GetNetworkProxyURL() string {
	if m != nil {
		return m.NetworkProxyURL
	}
	return ""
}

// deprecated use ZnetStaticDNSEntry
type ZedServer struct {
	HostName             string   `protobuf:"bytes,1,opt,name=HostName,proto3" json:"HostName,omitempty"`
	EID                  []string `protobuf:"bytes,2,rep,name=EID,proto3" json:"EID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZedServer) Reset()         { *m = ZedServer{} }
func (m *ZedServer) String() string { return proto.CompactTextString(m) }
func (*ZedServer) ProtoMessage()    {}
func (*ZedServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4fb078f34bebaa1, []int{3}
}

func (m *ZedServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZedServer.Unmarshal(m, b)
}
func (m *ZedServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZedServer.Marshal(b, m, deterministic)
}
func (m *ZedServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZedServer.Merge(m, src)
}
func (m *ZedServer) XXX_Size() int {
	return xxx_messageInfo_ZedServer.Size(m)
}
func (m *ZedServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ZedServer.DiscardUnknown(m)
}

var xxx_messageInfo_ZedServer proto.InternalMessageInfo

func (m *ZedServer) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *ZedServer) GetEID() []string {
	if m != nil {
		return m.EID
	}
	return nil
}

// These are list of static mapping that can be added to network
type ZnetStaticDNSEntry struct {
	HostName             string   `protobuf:"bytes,1,opt,name=HostName,proto3" json:"HostName,omitempty"`
	Address              []string `protobuf:"bytes,2,rep,name=Address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZnetStaticDNSEntry) Reset()         { *m = ZnetStaticDNSEntry{} }
func (m *ZnetStaticDNSEntry) String() string { return proto.CompactTextString(m) }
func (*ZnetStaticDNSEntry) ProtoMessage()    {}
func (*ZnetStaticDNSEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4fb078f34bebaa1, []int{4}
}

func (m *ZnetStaticDNSEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZnetStaticDNSEntry.Unmarshal(m, b)
}
func (m *ZnetStaticDNSEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZnetStaticDNSEntry.Marshal(b, m, deterministic)
}
func (m *ZnetStaticDNSEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZnetStaticDNSEntry.Merge(m, src)
}
func (m *ZnetStaticDNSEntry) XXX_Size() int {
	return xxx_messageInfo_ZnetStaticDNSEntry.Size(m)
}
func (m *ZnetStaticDNSEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ZnetStaticDNSEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ZnetStaticDNSEntry proto.InternalMessageInfo

func (m *ZnetStaticDNSEntry) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *ZnetStaticDNSEntry) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

// Common for IPv4 and IPv6
type Ipspec struct {
	Dhcp DHCPType `protobuf:"varint,2,opt,name=dhcp,proto3,enum=DHCPType" json:"dhcp,omitempty"`
	// subnet is CIDR format...x.y.z.l/nn
	Subnet  string   `protobuf:"bytes,3,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Gateway string   `protobuf:"bytes,5,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Domain  string   `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain,omitempty"`
	Ntp     string   `protobuf:"bytes,7,opt,name=ntp,proto3" json:"ntp,omitempty"`
	Dns     []string `protobuf:"bytes,8,rep,name=dns,proto3" json:"dns,omitempty"`
	// for IPAM management when dhcp is turned on.
	// If none provided, system will default pool.
	DhcpRange            *IpRange `protobuf:"bytes,9,opt,name=dhcpRange,proto3" json:"dhcpRange,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipspec) Reset()         { *m = Ipspec{} }
func (m *Ipspec) String() string { return proto.CompactTextString(m) }
func (*Ipspec) ProtoMessage()    {}
func (*Ipspec) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4fb078f34bebaa1, []int{5}
}

func (m *Ipspec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipspec.Unmarshal(m, b)
}
func (m *Ipspec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipspec.Marshal(b, m, deterministic)
}
func (m *Ipspec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipspec.Merge(m, src)
}
func (m *Ipspec) XXX_Size() int {
	return xxx_messageInfo_Ipspec.Size(m)
}
func (m *Ipspec) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipspec.DiscardUnknown(m)
}

var xxx_messageInfo_Ipspec proto.InternalMessageInfo

func (m *Ipspec) GetDhcp() DHCPType {
	if m != nil {
		return m.Dhcp
	}
	return DHCPType_DHCPNoop
}

func (m *Ipspec) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *Ipspec) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *Ipspec) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Ipspec) GetNtp() string {
	if m != nil {
		return m.Ntp
	}
	return ""
}

func (m *Ipspec) GetDns() []string {
	if m != nil {
		return m.Dns
	}
	return nil
}

func (m *Ipspec) GetDhcpRange() *IpRange {
	if m != nil {
		return m.DhcpRange
	}
	return nil
}

func init() {
	proto.RegisterEnum("ProxyProto", ProxyProto_name, ProxyProto_value)
	proto.RegisterEnum("DHCPType", DHCPType_name, DHCPType_value)
	proto.RegisterEnum("NetworkType", NetworkType_name, NetworkType_value)
	proto.RegisterType((*IpRange)(nil), "ipRange")
	proto.RegisterType((*ProxyServer)(nil), "ProxyServer")
	proto.RegisterType((*ProxyConfig)(nil), "ProxyConfig")
	proto.RegisterType((*ZedServer)(nil), "ZedServer")
	proto.RegisterType((*ZnetStaticDNSEntry)(nil), "ZnetStaticDNSEntry")
	proto.RegisterType((*Ipspec)(nil), "ipspec")
}

func init() { proto.RegisterFile("netcmn.proto", fileDescriptor_d4fb078f34bebaa1) }

var fileDescriptor_d4fb078f34bebaa1 = []byte{
	// 636 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x7f, 0x6f, 0x12, 0x4b,
	0x14, 0xed, 0x02, 0x05, 0xf6, 0xd2, 0xd2, 0x79, 0xf3, 0xde, 0x33, 0x9b, 0x26, 0x2a, 0x12, 0xd3,
	0x90, 0x26, 0x2e, 0x11, 0x9b, 0x26, 0xfe, 0xa9, 0x80, 0x52, 0x6b, 0x80, 0x0c, 0xb4, 0xda, 0x46,
	0xd3, 0x2c, 0x3b, 0xb7, 0x74, 0x23, 0xcc, 0x4c, 0x76, 0x87, 0xb6, 0xf8, 0xdd, 0xfc, 0x00, 0x7e,
	0x2a, 0xcd, 0xcc, 0x2e, 0x42, 0x8c, 0xf1, 0xaf, 0x9d, 0x73, 0xce, 0xdc, 0x73, 0x7f, 0xcc, 0x5d,
	0xd8, 0x11, 0xa8, 0xc3, 0xb9, 0xf0, 0x55, 0x2c, 0xb5, 0xac, 0x3f, 0x87, 0x52, 0xa4, 0x58, 0x20,
	0xa6, 0x48, 0xff, 0x83, 0xed, 0x44, 0x07, 0xb1, 0xf6, 0x9c, 0x9a, 0xd3, 0x70, 0x59, 0x0a, 0x28,
	0x81, 0x3c, 0x0a, 0xee, 0xe5, 0x2c, 0x67, 0x8e, 0xf5, 0x4f, 0x50, 0x19, 0xc6, 0xf2, 0x7e, 0x39,
	0xc2, 0xf8, 0x16, 0x63, 0xfa, 0x04, 0xb6, 0xad, 0x95, 0x0d, 0xab, 0xb6, 0x2a, 0xc6, 0xf8, 0x7e,
	0x39, 0x34, 0x14, 0x4b, 0x15, 0xfa, 0x00, 0x8a, 0x89, 0xbd, 0x9c, 0xd9, 0x64, 0x88, 0x52, 0x28,
	0x28, 0x19, 0x6b, 0x2f, 0x5f, 0x73, 0x1a, 0xbb, 0xcc, 0x9e, 0xeb, 0xdf, 0x9d, 0xcc, 0xbe, 0x2d,
	0xc5, 0x75, 0x34, 0xa5, 0x3e, 0x50, 0x81, 0xfa, 0x4e, 0xc6, 0x5f, 0x2c, 0xdb, 0x15, 0xc1, 0x64,
	0x86, 0x36, 0x57, 0x99, 0xfd, 0x41, 0xa1, 0x07, 0x50, 0x32, 0x05, 0x44, 0x98, 0x78, 0xb9, 0x5a,
	0xbe, 0x51, 0x69, 0xed, 0xf8, 0x1b, 0xd5, 0xb2, 0x95, 0x48, 0x1f, 0x01, 0xe0, 0x7d, 0x88, 0x4a,
	0x47, 0x52, 0x24, 0xb6, 0x02, 0x97, 0x6d, 0x30, 0xd4, 0x83, 0x92, 0x0a, 0xc2, 0xeb, 0x68, 0x86,
	0x5e, 0xc1, 0x8a, 0x2b, 0x48, 0x1b, 0xb0, 0xb7, 0x99, 0xf7, 0x8c, 0xbd, 0xf7, 0xb6, 0xed, 0x8d,
	0xdf, 0xe9, 0xfa, 0x4b, 0x70, 0x2f, 0x91, 0x67, 0x73, 0xda, 0x87, 0x72, 0x4f, 0x26, 0xba, 0x1f,
	0xcc, 0x31, 0x9b, 0xf0, 0x2f, 0x6c, 0x86, 0xdc, 0x3d, 0xe9, 0xd8, 0x82, 0x5d, 0x66, 0x8e, 0xf5,
	0x77, 0x40, 0x2f, 0x05, 0xea, 0x91, 0x0e, 0x74, 0x14, 0x76, 0xfa, 0xa3, 0xae, 0xd0, 0xf1, 0xf2,
	0xaf, 0x1e, 0x1e, 0x94, 0x5e, 0x71, 0x1e, 0x63, 0x92, 0x64, 0x3e, 0x2b, 0x58, 0xff, 0xe6, 0x40,
	0x31, 0x52, 0x89, 0xc2, 0x90, 0x3e, 0x84, 0x02, 0xbf, 0x09, 0x95, 0x7d, 0x87, 0x6a, 0xcb, 0xf5,
	0x3b, 0xbd, 0xf6, 0x70, 0xbc, 0x54, 0xc8, 0x2c, 0x6d, 0x1f, 0x6a, 0x31, 0x11, 0xa8, 0xb3, 0x81,
	0x64, 0xc8, 0x78, 0x4f, 0x03, 0x8d, 0x77, 0xc1, 0x32, 0x6b, 0x75, 0x05, 0x4d, 0x04, 0x97, 0xf3,
	0x20, 0x12, 0x5e, 0x31, 0x8d, 0x48, 0x91, 0xe9, 0x48, 0x68, 0xe5, 0x95, 0xd2, 0xb5, 0x11, 0x5a,
	0x19, 0x86, 0x8b, 0xc4, 0x2b, 0xa7, 0x3d, 0x72, 0x91, 0xd0, 0x03, 0x70, 0x4d, 0x56, 0xbb, 0x7d,
	0x9e, 0x5b, 0x73, 0x1a, 0x95, 0x56, 0xd9, 0xcf, 0xb6, 0x91, 0xad, 0xa5, 0xc3, 0x2b, 0x80, 0xf5,
	0x4e, 0xd1, 0x2a, 0xc0, 0x90, 0x0d, 0x3e, 0x5e, 0x5c, 0xf5, 0xc6, 0xe3, 0x21, 0xd9, 0xa2, 0x7b,
	0x50, 0x59, 0xe3, 0x11, 0x71, 0xd6, 0xc4, 0x68, 0xd0, 0x3e, 0x1d, 0x91, 0x1c, 0xdd, 0x05, 0x37,
	0x25, 0xde, 0x8c, 0x87, 0x24, 0x4f, 0xc9, 0x4a, 0x1f, 0x8c, 0x7b, 0x5d, 0x46, 0x7e, 0x38, 0x87,
	0x67, 0x50, 0x5e, 0x0d, 0x82, 0xee, 0xa4, 0xe7, 0xbe, 0x94, 0x8a, 0x6c, 0x51, 0x80, 0x62, 0xfa,
	0x04, 0xc4, 0x59, 0x2b, 0x02, 0x49, 0x8e, 0xfe, 0x0f, 0xff, 0x70, 0x54, 0x31, 0x86, 0x81, 0x46,
	0x7e, 0x95, 0x2e, 0x34, 0xc9, 0x9b, 0x80, 0xf6, 0x2c, 0x42, 0xa1, 0x49, 0xe1, 0xf0, 0x33, 0x54,
	0xfa, 0xe9, 0x46, 0x58, 0xe7, 0x7f, 0x61, 0xaf, 0xdf, 0x1d, 0x7f, 0x18, 0xb0, 0xd3, 0xf1, 0xc5,
	0xb0, 0xdb, 0x1f, 0x0c, 0x4c, 0xf5, 0x45, 0xc8, 0x9d, 0x1f, 0x91, 0x82, 0xfd, 0x1e, 0x93, 0xa2,
	0x49, 0xd2, 0x8e, 0x97, 0x4a, 0xcb, 0xf3, 0x23, 0xe2, 0x6d, 0xa0, 0x63, 0xb2, 0x6f, 0xfa, 0x48,
	0x51, 0xf7, 0xa4, 0x43, 0xaa, 0xaf, 0xdf, 0xc2, 0xe3, 0x50, 0xce, 0xfd, 0xaf, 0xc8, 0x91, 0x07,
	0x7e, 0x38, 0x93, 0x0b, 0xee, 0x2f, 0x4c, 0x21, 0x51, 0x88, 0xe9, 0xdf, 0x7d, 0xf9, 0x74, 0x1a,
	0xe9, 0x9b, 0xc5, 0xc4, 0x0f, 0xe5, 0xbc, 0x39, 0xbb, 0x7e, 0x86, 0x7c, 0x8a, 0x4d, 0xbc, 0xc5,
	0x66, 0xa0, 0xa2, 0xe6, 0x54, 0x36, 0x43, 0xfb, 0x8b, 0x4d, 0x8a, 0xf6, 0xf2, 0x8b, 0x9f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xf7, 0x71, 0xef, 0x26, 0x1a, 0x04, 0x00, 0x00,
}
