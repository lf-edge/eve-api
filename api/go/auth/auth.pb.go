// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package auth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthBody struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthBody) Reset()         { *m = AuthBody{} }
func (m *AuthBody) String() string { return proto.CompactTextString(m) }
func (*AuthBody) ProtoMessage()    {}
func (*AuthBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *AuthBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthBody.Unmarshal(m, b)
}
func (m *AuthBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthBody.Marshal(b, m, deterministic)
}
func (m *AuthBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthBody.Merge(m, src)
}
func (m *AuthBody) XXX_Size() int {
	return xxx_messageInfo_AuthBody.Size(m)
}
func (m *AuthBody) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthBody.DiscardUnknown(m)
}

var xxx_messageInfo_AuthBody proto.InternalMessageInfo

func (m *AuthBody) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type AuthContainer struct {
	AuthPayload *AuthBody `protobuf:"bytes,1,opt,name=authPayload,proto3" json:"authPayload,omitempty"`
	// if the length of senderCertHash received is not 16 bytes, then the protobuf
	// message either is not AuthContainer type, or is corrupted. Otherwise, the
	// reciever may not have the sender's signing certificate
	SenderCertHash       string   `protobuf:"bytes,2,opt,name=senderCertHash,proto3" json:"senderCertHash,omitempty"`
	SignatureHash        []byte   `protobuf:"bytes,3,opt,name=signatureHash,proto3" json:"signatureHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthContainer) Reset()         { *m = AuthContainer{} }
func (m *AuthContainer) String() string { return proto.CompactTextString(m) }
func (*AuthContainer) ProtoMessage()    {}
func (*AuthContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *AuthContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthContainer.Unmarshal(m, b)
}
func (m *AuthContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthContainer.Marshal(b, m, deterministic)
}
func (m *AuthContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthContainer.Merge(m, src)
}
func (m *AuthContainer) XXX_Size() int {
	return xxx_messageInfo_AuthContainer.Size(m)
}
func (m *AuthContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthContainer.DiscardUnknown(m)
}

var xxx_messageInfo_AuthContainer proto.InternalMessageInfo

func (m *AuthContainer) GetAuthPayload() *AuthBody {
	if m != nil {
		return m.AuthPayload
	}
	return nil
}

func (m *AuthContainer) GetSenderCertHash() string {
	if m != nil {
		return m.SenderCertHash
	}
	return ""
}

func (m *AuthContainer) GetSignatureHash() []byte {
	if m != nil {
		return m.SignatureHash
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthBody)(nil), "AuthBody")
	proto.RegisterType((*AuthContainer)(nil), "AuthContainer")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0x59, 0x05, 0xb5, 0x53, 0xeb, 0x21, 0xa7, 0xbd, 0x59, 0x96, 0x22, 0x05, 0x31, 0x01,
	0x7d, 0x02, 0x5b, 0x04, 0x8f, 0xb2, 0x47, 0x6f, 0xd3, 0x64, 0x4c, 0x02, 0xdb, 0xcc, 0x92, 0x3f,
	0x85, 0xfa, 0x08, 0x3e, 0xb5, 0xec, 0x4a, 0x61, 0xed, 0x71, 0xbe, 0xf9, 0xf1, 0xf1, 0xfb, 0x00,
	0xb0, 0x64, 0x27, 0xfb, 0xc8, 0x99, 0x9b, 0x15, 0xdc, 0xbc, 0x96, 0xec, 0x36, 0x6c, 0x8e, 0xa2,
	0x86, 0xeb, 0x1e, 0x8f, 0x1d, 0xa3, 0xa9, 0xab, 0x65, 0xb5, 0xbe, 0x6d, 0x4f, 0x67, 0xf3, 0x53,
	0xc1, 0x62, 0xc0, 0xb6, 0x1c, 0x32, 0xfa, 0x40, 0x51, 0x3c, 0xc2, 0x7c, 0x68, 0xf9, 0x98, 0xf0,
	0xf3, 0xe7, 0x99, 0x3c, 0x75, 0xb5, 0xd3, 0xaf, 0x78, 0x80, 0xbb, 0x44, 0xc1, 0x50, 0xdc, 0x52,
	0xcc, 0xef, 0x98, 0x5c, 0x7d, 0xb1, 0xac, 0xd6, 0xb3, 0xf6, 0x2c, 0x15, 0x2b, 0x58, 0x24, 0x6f,
	0x03, 0xe6, 0x12, 0x69, 0xc4, 0x2e, 0x47, 0x8d, 0xff, 0xe1, 0xe6, 0x0d, 0xee, 0x35, 0xef, 0xe5,
	0x37, 0x19, 0x32, 0x28, 0x75, 0xc7, 0xc5, 0xc8, 0x92, 0x28, 0x1e, 0xbc, 0xa6, 0xbf, 0x55, 0x9f,
	0x8d, 0xf5, 0xd9, 0x95, 0x9d, 0xd4, 0xbc, 0x57, 0xdd, 0xd7, 0x13, 0x19, 0x4b, 0x8a, 0x0e, 0xa4,
	0xb0, 0xf7, 0xca, 0xb2, 0x1a, 0xdc, 0x76, 0x57, 0x23, 0xfa, 0xf2, 0x1b, 0x00, 0x00, 0xff, 0xff,
	0xd4, 0x09, 0x0a, 0x0e, 0x0e, 0x01, 0x00, 0x00,
}
