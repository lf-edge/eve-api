// Copyright(c) 2017-2018 Zededa, Inc.
// All rights reserved.

syntax = "proto3";

package org.lfedge.eve.config;
option go_package  = "github.com/lf-edge/eve-api/go/config";
option java_package = "org.lfedge.eve.config";

import "evecommon/devmodelcommon.proto";

message UUIDandVersion {
  string uuid = 1;
  string version = 2;
}

// Device Operational Commands Semantic
// For rebooting device,  command=Reset, counter = counter+delta, desiredState = on
// For poweroff device,  command=Reset, counter = counter+delta, desiredState = off
// For backup at midnight, command=Backup, counter = counter+delta, desiredState=n/a, opsTime = mm/dd/yy:hh:ss
// Current implementation does support only single command outstanding for each
// type. In future can be extended to have more scheduled events.
message DeviceOpsCmd {
  uint32 counter = 2;
  bool desiredState = 3;
  // FIXME: change to timestamp, once we move to gogo proto
  string opsTime = 4;
}

// Timers and other per-device policy which relates to the interaction
// with zedcloud. Note that the timers are randomized on the device
// to avoid synchronization with other devices. Random range is between
// between .5 and 1.5 of these nominal values. If not set (i.e. zero),
// it means the default value of 60 seconds.
message ConfigItem {
  string key = 1;         // E.g., "configinterval"
  string value = 2;
  // deprecated = 3;
  // deprecated = 4;
  // deprecated = 5;
  // deprecated = 6;
  // deprecated = 7;
}


// Adapter bundles corresponding to a subset of what is in ZioBundle
// When used by a NetworkInstanceConfig the name is the logicallabel
// for the network adapter.
message Adapter {
  org.lfedge.eve.common.PhyIoType type = 1;
  string name = 2;  // Short hand name such as "com" from bundle
  EthVF eth_vf = 3; // Only relevant for PHY_IO_TYPE_PHY_IO_NET_ETH_VF

  // Define the network interface order relative to other directly assigned
  // network devices and virtual network adapters.
  // Only applies to (assignable) network adapters, i.e. types: "PhyIoNetEth", "PhyIoNetWLAN",
  // "PhyIoNetWWAN" and "PhyIoNetEthVF".
  // The numbering is across both the "Adapter" (direct assignments) and the "NetworkAdapter"
  // (virtual interfaces) lists for a given "AppInstanceConfig", thus every entry in these
  // lists, excluding non-networking adapters, must have a unique order number
  // (when the "enforce_network_interface_order" is enabled, see "VmConfig").
  // Interface with a lower order value should appear inside the application before
  // interface with a higher order value.
  // The implementation of this ordering may depend on the hypervisor. For example,
  // the hypervisor might virtualize the PCI bus and assign lower PCI addresses to
  // interfaces with lower order values. But the actual outcome of interface ordering
  // depends on the application and EVE therefore cannot guarantee desired order.
  // Since this field was introduced in later versions, older EVE versions do not support
  // user-defined interface ordering. For backward compatibility, the user-defined
  // order is applied only if "enforce_network_interface_order" is enabled for the given
  // application (see "VmConfig", file "vm.proto").
  uint32 interface_order = 4;
}

// Information regarding Virtual Function (VF) customisation
message EthVF {
  uint32 index = 1;
  string mac = 2;
  uint32 vlan_id = 3;
}

