// Copyright(c) 2021-2022 Zededa, Inc.
// All rights reserved.

syntax = "proto3";

package org.lfedge.eve.config;
option go_package  = "github.com/lf-edge/eve/api/go/config";
option java_package = "org.lfedge.eve.config";

message EdgeViewConfig {
    // JWT token for signed info, it contains the dispatcher
    // endpoint IP:Port, device UUID, nonce and expiration time
    string  token = 1;
    // dispatcher certificate(s) if it's not well-known CA signed
    repeated bytes disp_cert_pem = 2;
    // policy for device access through edge-view
    DevDebugAccessPolicy dev_policy = 3;
    // policy access for apps through edge-view
    AppDebugAccessPolicy app_policy = 4;
    // policy access for external endpoint through edge-view
    ExternalEndPointPolicy ext_policy = 5;
    // Generation ID for re-start edgeview without parameter changes
    uint32 generation_id = 6;
}

// Dev debug policy applicable to edge-view
message DevDebugAccessPolicy {
    // device side of edge-view access is allowed or not
    bool allow_dev = 1;
}

// App debug policy applicable to edge-view
message AppDebugAccessPolicy {
    // app side of edge-view access is allowed or not
    bool allow_app = 1;
}

// External Endpoint applicable to edge-view
// To mean the entity external to the device, e.g. a local-profile server on the LAN outside of mgmt
// or app-shared ports. since it's not part of EVE, and not part of EVE applications. In the EdgeView code,
// if tcp session setup is to an address we don't have, it identifies the request as 'external'
message ExternalEndPointPolicy {
    // external of device side of edge-view access is allowed or not
    bool allow_ext = 1;
}
